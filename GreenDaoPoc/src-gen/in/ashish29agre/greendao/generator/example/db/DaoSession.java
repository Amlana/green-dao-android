package in.ashish29agre.greendao.generator.example.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import in.ashish29agre.greendao.generator.example.db.Blog;
import in.ashish29agre.greendao.generator.example.db.User;
import in.ashish29agre.greendao.generator.example.db.Comment;

import in.ashish29agre.greendao.generator.example.db.BlogDao;
import in.ashish29agre.greendao.generator.example.db.UserDao;
import in.ashish29agre.greendao.generator.example.db.CommentDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig blogDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig commentDaoConfig;

    private final BlogDao blogDao;
    private final UserDao userDao;
    private final CommentDao commentDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        blogDaoConfig = daoConfigMap.get(BlogDao.class).clone();
        blogDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        commentDaoConfig = daoConfigMap.get(CommentDao.class).clone();
        commentDaoConfig.initIdentityScope(type);

        blogDao = new BlogDao(blogDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        commentDao = new CommentDao(commentDaoConfig, this);

        registerDao(Blog.class, blogDao);
        registerDao(User.class, userDao);
        registerDao(Comment.class, commentDao);
    }
    
    public void clear() {
        blogDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        commentDaoConfig.getIdentityScope().clear();
    }

    public BlogDao getBlogDao() {
        return blogDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public CommentDao getCommentDao() {
        return commentDao;
    }

}
